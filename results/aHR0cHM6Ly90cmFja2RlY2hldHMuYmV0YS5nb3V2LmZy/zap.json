{
	"@programName": "ZAP",
	"@version": "2.16.1",
	"@generated": "Sun, 11 May 2025 05:47:36",
	"site":[ 
		{
			"@name": "https://trackdechets.beta.gouv.fr",
			"@host": "trackdechets.beta.gouv.fr",
			"@port": "443",
			"@ssl": "true",
			"alerts": [ 
				{
					"pluginid": "10055",
					"alertRef": "10055-13",
					"alert": "CSP: Failure to Define Directive with No Fallback",
					"name": "CSP: Failure to Define Directive with No Fallback",
					"riskcode": "2",
					"confidence": "3",
					"riskdesc": "Medium (High)",
					"desc": "<p>The Content Security Policy fails to define one of the directives that has no fallback. Missing/excluding them is the same as allowing anything.</p>",
					"instances":[ 
						{
							"id": "11",
							"uri": "https://trackdechets.beta.gouv.fr",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "img-src 'self' data: static/; font-src 'self' data: static/; style-src 'self' 'unsafe-inline' static/; script-src 'self' 'unsafe-inline' static/; connect-src 'self'; frame-src 'self' https://statistiques.trackdechets.beta.gouv.fr; default-src 'self' trackdechets.beta.gouv.fr/ blob:",
							"otherinfo": "The directive(s): frame-ancestors, form-action is/are among the directives that do not fallback to default-src."
						},
						{
							"id": "4",
							"uri": "https://trackdechets.beta.gouv.fr/robots.txt",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "img-src 'self' data: static/; font-src 'self' data: static/; style-src 'self' 'unsafe-inline' static/; script-src 'self' 'unsafe-inline' static/; connect-src 'self'; frame-src 'self' https://statistiques.trackdechets.beta.gouv.fr; default-src 'self' trackdechets.beta.gouv.fr/ blob:",
							"otherinfo": "The directive(s): frame-ancestors, form-action is/are among the directives that do not fallback to default-src."
						},
						{
							"id": "5",
							"uri": "https://trackdechets.beta.gouv.fr/sitemap.xml",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "img-src 'self' data: static/; font-src 'self' data: static/; style-src 'self' 'unsafe-inline' static/; script-src 'self' 'unsafe-inline' static/; connect-src 'self'; frame-src 'self' https://statistiques.trackdechets.beta.gouv.fr; default-src 'self' trackdechets.beta.gouv.fr/ blob:",
							"otherinfo": "The directive(s): frame-ancestors, form-action is/are among the directives that do not fallback to default-src."
						}
					],
					"count": "3",
					"solution": "<p>Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.</p>",
					"otherinfo": "<p>The directive(s): frame-ancestors, form-action is/are among the directives that do not fallback to default-src.</p>",
					"reference": "<p>https://www.w3.org/TR/CSP/</p><p>https://caniuse.com/#search=content+security+policy</p><p>https://content-security-policy.com/</p><p>https://github.com/HtmlUnit/htmlunit-csp</p><p>https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources</p>",
					"cweid": "693",
					"wascid": "15",
					"sourceid": "6"
				},
				{
					"pluginid": "10055",
					"alertRef": "10055-5",
					"alert": "CSP: script-src unsafe-inline",
					"name": "CSP: script-src unsafe-inline",
					"riskcode": "2",
					"confidence": "3",
					"riskdesc": "Medium (High)",
					"desc": "<p>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</p>",
					"instances":[ 
						{
							"id": "12",
							"uri": "https://trackdechets.beta.gouv.fr",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "img-src 'self' data: static/; font-src 'self' data: static/; style-src 'self' 'unsafe-inline' static/; script-src 'self' 'unsafe-inline' static/; connect-src 'self'; frame-src 'self' https://statistiques.trackdechets.beta.gouv.fr; default-src 'self' trackdechets.beta.gouv.fr/ blob:",
							"otherinfo": "script-src includes unsafe-inline."
						},
						{
							"id": "6",
							"uri": "https://trackdechets.beta.gouv.fr/robots.txt",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "img-src 'self' data: static/; font-src 'self' data: static/; style-src 'self' 'unsafe-inline' static/; script-src 'self' 'unsafe-inline' static/; connect-src 'self'; frame-src 'self' https://statistiques.trackdechets.beta.gouv.fr; default-src 'self' trackdechets.beta.gouv.fr/ blob:",
							"otherinfo": "script-src includes unsafe-inline."
						},
						{
							"id": "7",
							"uri": "https://trackdechets.beta.gouv.fr/sitemap.xml",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "img-src 'self' data: static/; font-src 'self' data: static/; style-src 'self' 'unsafe-inline' static/; script-src 'self' 'unsafe-inline' static/; connect-src 'self'; frame-src 'self' https://statistiques.trackdechets.beta.gouv.fr; default-src 'self' trackdechets.beta.gouv.fr/ blob:",
							"otherinfo": "script-src includes unsafe-inline."
						}
					],
					"count": "3",
					"solution": "<p>Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.</p>",
					"otherinfo": "<p>script-src includes unsafe-inline.</p>",
					"reference": "<p>https://www.w3.org/TR/CSP/</p><p>https://caniuse.com/#search=content+security+policy</p><p>https://content-security-policy.com/</p><p>https://github.com/HtmlUnit/htmlunit-csp</p><p>https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources</p>",
					"cweid": "693",
					"wascid": "15",
					"sourceid": "6"
				},
				{
					"pluginid": "10055",
					"alertRef": "10055-6",
					"alert": "CSP: style-src unsafe-inline",
					"name": "CSP: style-src unsafe-inline",
					"riskcode": "2",
					"confidence": "3",
					"riskdesc": "Medium (High)",
					"desc": "<p>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</p>",
					"instances":[ 
						{
							"id": "13",
							"uri": "https://trackdechets.beta.gouv.fr",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "img-src 'self' data: static/; font-src 'self' data: static/; style-src 'self' 'unsafe-inline' static/; script-src 'self' 'unsafe-inline' static/; connect-src 'self'; frame-src 'self' https://statistiques.trackdechets.beta.gouv.fr; default-src 'self' trackdechets.beta.gouv.fr/ blob:",
							"otherinfo": "style-src includes unsafe-inline."
						},
						{
							"id": "8",
							"uri": "https://trackdechets.beta.gouv.fr/robots.txt",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "img-src 'self' data: static/; font-src 'self' data: static/; style-src 'self' 'unsafe-inline' static/; script-src 'self' 'unsafe-inline' static/; connect-src 'self'; frame-src 'self' https://statistiques.trackdechets.beta.gouv.fr; default-src 'self' trackdechets.beta.gouv.fr/ blob:",
							"otherinfo": "style-src includes unsafe-inline."
						},
						{
							"id": "9",
							"uri": "https://trackdechets.beta.gouv.fr/sitemap.xml",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "img-src 'self' data: static/; font-src 'self' data: static/; style-src 'self' 'unsafe-inline' static/; script-src 'self' 'unsafe-inline' static/; connect-src 'self'; frame-src 'self' https://statistiques.trackdechets.beta.gouv.fr; default-src 'self' trackdechets.beta.gouv.fr/ blob:",
							"otherinfo": "style-src includes unsafe-inline."
						}
					],
					"count": "3",
					"solution": "<p>Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.</p>",
					"otherinfo": "<p>style-src includes unsafe-inline.</p>",
					"reference": "<p>https://www.w3.org/TR/CSP/</p><p>https://caniuse.com/#search=content+security+policy</p><p>https://content-security-policy.com/</p><p>https://github.com/HtmlUnit/htmlunit-csp</p><p>https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources</p>",
					"cweid": "693",
					"wascid": "15",
					"sourceid": "6"
				},
				{
					"pluginid": "10098",
					"alertRef": "10098",
					"alert": "Cross-Domain Misconfiguration",
					"name": "Cross-Domain Misconfiguration",
					"riskcode": "2",
					"confidence": "2",
					"riskdesc": "Medium (Medium)",
					"desc": "<p>Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.</p>",
					"instances":[ 
						{
							"id": "67",
							"uri": "https://trackdechets.beta.gouv.fr/static/css/trackdechets.css",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "Access-Control-Allow-Origin: *",
							"otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
						},
						{
							"id": "75",
							"uri": "https://trackdechets.beta.gouv.fr/static/img/apple-touch-icon.png",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "Access-Control-Allow-Origin: *",
							"otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
						},
						{
							"id": "82",
							"uri": "https://trackdechets.beta.gouv.fr/static/img/favicon-16x16.png",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "Access-Control-Allow-Origin: *",
							"otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
						},
						{
							"id": "79",
							"uri": "https://trackdechets.beta.gouv.fr/static/img/favicon-32x32.png",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "Access-Control-Allow-Origin: *",
							"otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
						},
						{
							"id": "84",
							"uri": "https://trackdechets.beta.gouv.fr/static/img/safari-pinned-tab.svg",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "Access-Control-Allow-Origin: *",
							"otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
						},
						{
							"id": "86",
							"uri": "https://trackdechets.beta.gouv.fr/static/img/trackdechets.png",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "Access-Control-Allow-Origin: *",
							"otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
						},
						{
							"id": "89",
							"uri": "https://trackdechets.beta.gouv.fr/static/js/dsfr.module.min.js",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "Access-Control-Allow-Origin: *",
							"otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
						},
						{
							"id": "87",
							"uri": "https://trackdechets.beta.gouv.fr/static/js/htmx.js",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "Access-Control-Allow-Origin: *",
							"otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
						},
						{
							"id": "88",
							"uri": "https://trackdechets.beta.gouv.fr/static/medias/illustrationCollector.svg",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "Access-Control-Allow-Origin: *",
							"otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
						},
						{
							"id": "81",
							"uri": "https://trackdechets.beta.gouv.fr/static/pdf/mentions-legales.pdf",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "Access-Control-Allow-Origin: *",
							"otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
						},
						{
							"id": "74",
							"uri": "https://trackdechets.beta.gouv.fr/static/pdf/politique-de-confidentialite.pdf",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "Access-Control-Allow-Origin: *",
							"otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
						},
						{
							"id": "83",
							"uri": "https://trackdechets.beta.gouv.fr/static/site.webmanifest",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "Access-Control-Allow-Origin: *",
							"otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
						}
					],
					"count": "12",
					"solution": "<p>Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).</p><p>Configure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.</p>",
					"otherinfo": "<p>The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.</p>",
					"reference": "<p>https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy</p>",
					"cweid": "264",
					"wascid": "14",
					"sourceid": "93"
				},
				{
					"pluginid": "10010",
					"alertRef": "10010",
					"alert": "Cookie No HttpOnly Flag",
					"name": "Cookie No HttpOnly Flag",
					"riskcode": "1",
					"confidence": "2",
					"riskdesc": "Low (Medium)",
					"desc": "<p>A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.</p>",
					"instances":[ 
						{
							"id": "14",
							"uri": "https://trackdechets.beta.gouv.fr",
							"method": "GET",
							"param": "csrftoken",
							"attack": "",
							"evidence": "Set-Cookie: csrftoken",
							"otherinfo": ""
						},
						{
							"id": "34",
							"uri": "https://trackdechets.beta.gouv.fr/",
							"method": "GET",
							"param": "csrftoken",
							"attack": "",
							"evidence": "Set-Cookie: csrftoken",
							"otherinfo": ""
						},
						{
							"id": "94",
							"uri": "https://trackdechets.beta.gouv.fr/nl-signup/general/",
							"method": "POST",
							"param": "csrftoken",
							"attack": "",
							"evidence": "Set-Cookie: csrftoken",
							"otherinfo": ""
						},
						{
							"id": "98",
							"uri": "https://trackdechets.beta.gouv.fr/nl-signup/tech/",
							"method": "POST",
							"param": "csrftoken",
							"attack": "",
							"evidence": "Set-Cookie: csrftoken",
							"otherinfo": ""
						}
					],
					"count": "4",
					"solution": "<p>Ensure that the HttpOnly flag is set for all cookies.</p>",
					"otherinfo": "",
					"reference": "<p>https://owasp.org/www-community/HttpOnly</p>",
					"cweid": "1004",
					"wascid": "13",
					"sourceid": "6"
				},
				{
					"pluginid": "10011",
					"alertRef": "10011",
					"alert": "Cookie Without Secure Flag",
					"name": "Cookie Without Secure Flag",
					"riskcode": "1",
					"confidence": "2",
					"riskdesc": "Low (Medium)",
					"desc": "<p>A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.</p>",
					"instances":[ 
						{
							"id": "15",
							"uri": "https://trackdechets.beta.gouv.fr",
							"method": "GET",
							"param": "csrftoken",
							"attack": "",
							"evidence": "Set-Cookie: csrftoken",
							"otherinfo": ""
						},
						{
							"id": "35",
							"uri": "https://trackdechets.beta.gouv.fr/",
							"method": "GET",
							"param": "csrftoken",
							"attack": "",
							"evidence": "Set-Cookie: csrftoken",
							"otherinfo": ""
						},
						{
							"id": "95",
							"uri": "https://trackdechets.beta.gouv.fr/nl-signup/general/",
							"method": "POST",
							"param": "csrftoken",
							"attack": "",
							"evidence": "Set-Cookie: csrftoken",
							"otherinfo": ""
						},
						{
							"id": "99",
							"uri": "https://trackdechets.beta.gouv.fr/nl-signup/tech/",
							"method": "POST",
							"param": "csrftoken",
							"attack": "",
							"evidence": "Set-Cookie: csrftoken",
							"otherinfo": ""
						}
					],
					"count": "4",
					"solution": "<p>Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.</p>",
					"otherinfo": "",
					"reference": "<p>https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html</p>",
					"cweid": "614",
					"wascid": "13",
					"sourceid": "6"
				},
				{
					"pluginid": "10110",
					"alertRef": "10110",
					"alert": "Dangerous JS Functions",
					"name": "Dangerous JS Functions",
					"riskcode": "1",
					"confidence": "1",
					"riskdesc": "Low (Low)",
					"desc": "<p>A dangerous JS function seems to be in use that would leave the site vulnerable.</p>",
					"instances":[ 
						{
							"id": "92",
							"uri": "https://trackdechets.beta.gouv.fr/static/js/htmx.js",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "eval(",
							"otherinfo": ""
						}
					],
					"count": "1",
					"solution": "<p>See the references for security advice on the use of these functions.</p>",
					"otherinfo": "",
					"reference": "<p>https://angular.io/guide/security</p>",
					"cweid": "749",
					"wascid": "-1",
					"sourceid": "106"
				},
				{
					"pluginid": "90004",
					"alertRef": "90004-1",
					"alert": "Insufficient Site Isolation Against Spectre Vulnerability",
					"name": "Insufficient Site Isolation Against Spectre Vulnerability",
					"riskcode": "1",
					"confidence": "2",
					"riskdesc": "Low (Medium)",
					"desc": "<p>Cross-Origin-Resource-Policy header is an opt-in header designed to counter side-channels attacks like Spectre. Resource should be specifically set as shareable amongst different origins.</p>",
					"instances":[ 
						{
							"id": "45",
							"uri": "https://trackdechets.beta.gouv.fr",
							"method": "GET",
							"param": "Cross-Origin-Resource-Policy",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "43",
							"uri": "https://trackdechets.beta.gouv.fr/",
							"method": "GET",
							"param": "Cross-Origin-Resource-Policy",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "49",
							"uri": "https://trackdechets.beta.gouv.fr/cgu/",
							"method": "GET",
							"param": "Cross-Origin-Resource-Policy",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "71",
							"uri": "https://trackdechets.beta.gouv.fr/partenaires/",
							"method": "GET",
							"param": "Cross-Origin-Resource-Policy",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "64",
							"uri": "https://trackdechets.beta.gouv.fr/stats/",
							"method": "GET",
							"param": "Cross-Origin-Resource-Policy",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "46",
							"uri": "https://trackdechets.beta.gouv.fr",
							"method": "GET",
							"param": "Cross-Origin-Embedder-Policy",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "44",
							"uri": "https://trackdechets.beta.gouv.fr/",
							"method": "GET",
							"param": "Cross-Origin-Embedder-Policy",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "50",
							"uri": "https://trackdechets.beta.gouv.fr/cgu/",
							"method": "GET",
							"param": "Cross-Origin-Embedder-Policy",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "72",
							"uri": "https://trackdechets.beta.gouv.fr/partenaires/",
							"method": "GET",
							"param": "Cross-Origin-Embedder-Policy",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "65",
							"uri": "https://trackdechets.beta.gouv.fr/stats/",
							"method": "GET",
							"param": "Cross-Origin-Embedder-Policy",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						}
					],
					"count": "10",
					"solution": "<p>Ensure that the application/web server sets the Cross-Origin-Resource-Policy header appropriately, and that it sets the Cross-Origin-Resource-Policy header to 'same-origin' for all web pages.</p><p>'same-site' is considered as less secured and should be avoided.</p><p>If resources must be shared, set the header to 'cross-origin'.</p><p>If possible, ensure that the end user uses a standards-compliant and modern web browser that supports the Cross-Origin-Resource-Policy header (https://caniuse.com/mdn-http_headers_cross-origin-resource-policy).</p>",
					"otherinfo": "",
					"reference": "<p>https://developer.mozilla.org/en-US/docs/Web/HTTP/Cross-Origin_Resource_Policy</p>",
					"cweid": "693",
					"wascid": "14",
					"sourceid": "1"
				},
				{
					"pluginid": "10094",
					"alertRef": "10094-3",
					"alert": "Base64 Disclosure",
					"name": "Base64 Disclosure",
					"riskcode": "0",
					"confidence": "2",
					"riskdesc": "Informational (Medium)",
					"desc": "<p>Base64 encoded data was disclosed by the application/web server. Note: in the interests of performance not all base64 strings in the response were analyzed individually, the entire response should be looked at by the analyst/security team/developer(s).</p>",
					"instances":[ 
						{
							"id": "58",
							"uri": "https://trackdechets.beta.gouv.fr",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "ZMokzBUZonNCzhdzTjfNxK1i5HgctT7C",
							"otherinfo": "d\uFFFD$\uFFFD\\x0015\\x0019\uFFFDsB\uFFFD\\x0017sN7\uFFFD\u012Db\uFFFDx\\x001c\uFFFD>\uFFFD"
						},
						{
							"id": "62",
							"uri": "https://trackdechets.beta.gouv.fr",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "ahqxEj1pyUQyIwym7RhwYmgxLWzrmfvk",
							"otherinfo": "j\\x001a\uFFFD\\x0012=i\uFFFDD2#\\x000c\uFFFD\uFFFD\\x0018pbh1-l\uFFFD\uFFFD\uFFFD"
						},
						{
							"id": "53",
							"uri": "https://trackdechets.beta.gouv.fr/",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "ZMokzBUZonNCzhdzTjfNxK1i5HgctT7C",
							"otherinfo": "d\uFFFD$\uFFFD\\x0015\\x0019\uFFFDsB\uFFFD\\x0017sN7\uFFFD\u012Db\uFFFDx\\x001c\uFFFD>\uFFFD"
						},
						{
							"id": "105",
							"uri": "https://trackdechets.beta.gouv.fr/static/css/dsfr.min.css",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "2H9v2H7V5H4v4h16V5h-3v2h-2V5zm5",
							"otherinfo": "\uFFFDo\uFFFD~\uFFFD\uFFFD~/\uFFFD\\x001dzW\uFFFD~\uFFFD\uFFFD\uFFFD\uFFFDey\uFFFDn"
						},
						{
							"id": "85",
							"uri": "https://trackdechets.beta.gouv.fr/static/img/safari-pinned-tab.svg",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "org/TR/2001/REC-SVG-20010904/DTD/svg10",
							"otherinfo": "\uFFFD\uFFFD?M\\x001f\uFFFD\uFFFDMD@\uFFFDIQ\uFFFD\uFFFDM5\uFFFD\uFFFD8\uFFFD4\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD"
						},
						{
							"id": "111",
							"uri": "https://trackdechets.beta.gouv.fr/static/pdf/homologation-trackdechets-version-courte.pdf",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "8/ColorSpace/DeviceRGB/Filter/DCTDecode/Height",
							"otherinfo": "\uFFFD\uD861\uDD8A\u04A5\uFFFD\\x001e\uFFFD7\uFFFD\uFFFD\u01D1\\x0018\\x001f\u014A[^\uFFFD\uFFFD\uFFFDL7\uFFFD\uFFFD\u05FF\\x001d\u8806"
						},
						{
							"id": "96",
							"uri": "https://trackdechets.beta.gouv.fr/nl-signup/general/",
							"method": "POST",
							"param": "",
							"attack": "",
							"evidence": "ZMokzBUZonNCzhdzTjfNxK1i5HgctT7C",
							"otherinfo": "d\uFFFD$\uFFFD\\x0015\\x0019\uFFFDsB\uFFFD\\x0017sN7\uFFFD\u012Db\uFFFDx\\x001c\uFFFD>\uFFFD"
						},
						{
							"id": "100",
							"uri": "https://trackdechets.beta.gouv.fr/nl-signup/tech/",
							"method": "POST",
							"param": "",
							"attack": "",
							"evidence": "ZMokzBUZonNCzhdzTjfNxK1i5HgctT7C",
							"otherinfo": "d\uFFFD$\uFFFD\\x0015\\x0019\uFFFDsB\uFFFD\\x0017sN7\uFFFD\u012Db\uFFFDx\\x001c\uFFFD>\uFFFD"
						}
					],
					"count": "8",
					"solution": "<p>Manually confirm that the Base64 data does not leak sensitive information, and that the data cannot be aggregated/used to exploit other vulnerabilities.</p>",
					"otherinfo": "<p>d\uFFFD$\uFFFD\\x0015\\x0019\uFFFDsB\uFFFD\\x0017sN7\uFFFD\u012Db\uFFFDx\\x001c\uFFFD>\uFFFD</p>",
					"reference": "<p>https://projects.webappsec.org/w/page/13246936/Information%20Leakage</p>",
					"cweid": "319",
					"wascid": "13",
					"sourceid": "6"
				},
				{
					"pluginid": "10027",
					"alertRef": "10027",
					"alert": "Information Disclosure - Suspicious Comments",
					"name": "Information Disclosure - Suspicious Comments",
					"riskcode": "0",
					"confidence": "1",
					"riskdesc": "Informational (Low)",
					"desc": "<p>The response appears to contain suspicious comments which may help an attacker.</p>",
					"instances":[ 
						{
							"id": "91",
							"uri": "https://trackdechets.beta.gouv.fr/static/js/dsfr.module.min.js",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "query",
							"otherinfo": "The following pattern was used: \\bQUERY\\b and was detected in likely comment: \"//www.w3.org/2000/svg' viewbox='0 0 ${this._width} ${this._height}' width='${this._width}px' height='${this._height}px'>${this._\", see evidence field for the suspicious comment/snippet."
						},
						{
							"id": "110",
							"uri": "https://trackdechets.beta.gouv.fr/static/js/dsfr.nomodule.min.js",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "query",
							"otherinfo": "The following pattern was used: \\bQUERY\\b and was detected in likely comment: \"//www.w3.org/2000/svg' viewbox='0 0 \"+this._width+\" \"+this._height+\"' width='\"+this._width+\"px' height='\"+this._height+\"px'>\"+th\", see evidence field for the suspicious comment/snippet."
						},
						{
							"id": "90",
							"uri": "https://trackdechets.beta.gouv.fr/static/js/htmx.js",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "from",
							"otherinfo": "The following pattern was used: \\bFROM\\b and was detected in likely comment: \"//\"+e+r}else if(location.protocol==\"http:\"){r=\"ws://\"+e+r}}var t=U.createWebSocket(r);t.onerror=function(e){J(s,\"htmx:wsError\",{\", see evidence field for the suspicious comment/snippet."
						},
						{
							"id": "60",
							"uri": "https://trackdechets.beta.gouv.fr/stats/",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "from",
							"otherinfo": "The following pattern was used: \\bFROM\\b and was detected in likely comment: \"// compute iframe height from screen width\", see evidence field for the suspicious comment/snippet."
						}
					],
					"count": "4",
					"solution": "<p>Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.</p>",
					"otherinfo": "<p>The following pattern was used: \\bQUERY\\b and was detected in likely comment: \"//www.w3.org/2000/svg' viewbox='0 0 ${this._width} ${this._height}' width='${this._width}px' height='${this._height}px'>${this._\", see evidence field for the suspicious comment/snippet.</p>",
					"reference": "",
					"cweid": "615",
					"wascid": "13",
					"sourceid": "111"
				},
				{
					"pluginid": "10109",
					"alertRef": "10109",
					"alert": "Modern Web Application",
					"name": "Modern Web Application",
					"riskcode": "0",
					"confidence": "2",
					"riskdesc": "Informational (Medium)",
					"desc": "<p>The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.</p>",
					"instances":[ 
						{
							"id": "37",
							"uri": "https://trackdechets.beta.gouv.fr",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<a aria-current=\"true\"\n                               class=\"fr-nav__link\"\n                               href=\"/\"\n                               target=\"_self\">Accueil</a>",
							"otherinfo": "Links have been found with a target of '_self' - this is often used by modern frameworks to force a full page reload."
						},
						{
							"id": "39",
							"uri": "https://trackdechets.beta.gouv.fr/",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<a aria-current=\"true\"\n                               class=\"fr-nav__link\"\n                               href=\"/\"\n                               target=\"_self\">Accueil</a>",
							"otherinfo": "Links have been found with a target of '_self' - this is often used by modern frameworks to force a full page reload."
						},
						{
							"id": "77",
							"uri": "https://trackdechets.beta.gouv.fr/accessibilite/",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<a \n                               class=\"fr-nav__link\"\n                               href=\"/\"\n                               target=\"_self\">Accueil</a>",
							"otherinfo": "Links have been found with a target of '_self' - this is often used by modern frameworks to force a full page reload."
						},
						{
							"id": "40",
							"uri": "https://trackdechets.beta.gouv.fr/cgu/",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<a \n                               class=\"fr-nav__link\"\n                               href=\"/\"\n                               target=\"_self\">Accueil</a>",
							"otherinfo": "Links have been found with a target of '_self' - this is often used by modern frameworks to force a full page reload."
						},
						{
							"id": "68",
							"uri": "https://trackdechets.beta.gouv.fr/partenaires/",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<a \n                               class=\"fr-nav__link\"\n                               href=\"/\"\n                               target=\"_self\">Accueil</a>",
							"otherinfo": "Links have been found with a target of '_self' - this is often used by modern frameworks to force a full page reload."
						},
						{
							"id": "61",
							"uri": "https://trackdechets.beta.gouv.fr/stats/",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<a \n                               class=\"fr-nav__link\"\n                               href=\"/\"\n                               target=\"_self\">Accueil</a>",
							"otherinfo": "Links have been found with a target of '_self' - this is often used by modern frameworks to force a full page reload."
						}
					],
					"count": "6",
					"solution": "<p>This is an informational alert and so no changes are required.</p>",
					"otherinfo": "<p>Links have been found with a target of '_self' - this is often used by modern frameworks to force a full page reload.</p>",
					"reference": "",
					"cweid": "-1",
					"wascid": "-1",
					"sourceid": "6"
				},
				{
					"pluginid": "10015",
					"alertRef": "10015",
					"alert": "Re-examine Cache-control Directives",
					"name": "Re-examine Cache-control Directives",
					"riskcode": "0",
					"confidence": "1",
					"riskdesc": "Informational (Low)",
					"desc": "<p>The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.</p>",
					"instances":[ 
						{
							"id": "10",
							"uri": "https://trackdechets.beta.gouv.fr",
							"method": "GET",
							"param": "cache-control",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "33",
							"uri": "https://trackdechets.beta.gouv.fr/",
							"method": "GET",
							"param": "cache-control",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "73",
							"uri": "https://trackdechets.beta.gouv.fr/accessibilite/",
							"method": "GET",
							"param": "cache-control",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "36",
							"uri": "https://trackdechets.beta.gouv.fr/cgu/",
							"method": "GET",
							"param": "cache-control",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "66",
							"uri": "https://trackdechets.beta.gouv.fr/partenaires/",
							"method": "GET",
							"param": "cache-control",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "59",
							"uri": "https://trackdechets.beta.gouv.fr/stats/",
							"method": "GET",
							"param": "cache-control",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						}
					],
					"count": "6",
					"solution": "<p>For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".</p>",
					"otherinfo": "",
					"reference": "<p>https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching</p><p>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control</p><p>https://grayduck.mn/2021/09/13/cache-control-recommendations/</p>",
					"cweid": "525",
					"wascid": "13",
					"sourceid": "6"
				},
				{
					"pluginid": "90005",
					"alertRef": "90005-3",
					"alert": "Sec-Fetch-Dest Header is Missing",
					"name": "Sec-Fetch-Dest Header is Missing",
					"riskcode": "0",
					"confidence": "3",
					"riskdesc": "Informational (High)",
					"desc": "<p>Specifies how and where the data would be used. For instance, if the value is audio, then the requested resource must be audio data and not any other type of resource.</p>",
					"instances":[ 
						{
							"id": "56",
							"uri": "https://trackdechets.beta.gouv.fr/",
							"method": "GET",
							"param": "Sec-Fetch-Dest",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "30",
							"uri": "https://trackdechets.beta.gouv.fr/robots.txt",
							"method": "GET",
							"param": "Sec-Fetch-Dest",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "28",
							"uri": "https://trackdechets.beta.gouv.fr/sitemap.xml",
							"method": "GET",
							"param": "Sec-Fetch-Dest",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						}
					],
					"count": "3",
					"solution": "<p>Ensure that Sec-Fetch-Dest header is included in request headers.</p>",
					"otherinfo": "",
					"reference": "<p>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Sec-Fetch-Dest</p>",
					"cweid": "352",
					"wascid": "9",
					"sourceid": "33"
				},
				{
					"pluginid": "90005",
					"alertRef": "90005-2",
					"alert": "Sec-Fetch-Mode Header is Missing",
					"name": "Sec-Fetch-Mode Header is Missing",
					"riskcode": "0",
					"confidence": "3",
					"riskdesc": "Informational (High)",
					"desc": "<p>Allows to differentiate between requests for navigating between HTML pages and requests for loading resources like images, audio etc.</p>",
					"instances":[ 
						{
							"id": "55",
							"uri": "https://trackdechets.beta.gouv.fr/",
							"method": "GET",
							"param": "Sec-Fetch-Mode",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "27",
							"uri": "https://trackdechets.beta.gouv.fr/robots.txt",
							"method": "GET",
							"param": "Sec-Fetch-Mode",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "26",
							"uri": "https://trackdechets.beta.gouv.fr/sitemap.xml",
							"method": "GET",
							"param": "Sec-Fetch-Mode",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						}
					],
					"count": "3",
					"solution": "<p>Ensure that Sec-Fetch-Mode header is included in request headers.</p>",
					"otherinfo": "",
					"reference": "<p>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Sec-Fetch-Mode</p>",
					"cweid": "352",
					"wascid": "9",
					"sourceid": "33"
				},
				{
					"pluginid": "90005",
					"alertRef": "90005-1",
					"alert": "Sec-Fetch-Site Header is Missing",
					"name": "Sec-Fetch-Site Header is Missing",
					"riskcode": "0",
					"confidence": "3",
					"riskdesc": "Informational (High)",
					"desc": "<p>Specifies the relationship between request initiator's origin and target's origin.</p>",
					"instances":[ 
						{
							"id": "54",
							"uri": "https://trackdechets.beta.gouv.fr/",
							"method": "GET",
							"param": "Sec-Fetch-Site",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "25",
							"uri": "https://trackdechets.beta.gouv.fr/robots.txt",
							"method": "GET",
							"param": "Sec-Fetch-Site",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "24",
							"uri": "https://trackdechets.beta.gouv.fr/sitemap.xml",
							"method": "GET",
							"param": "Sec-Fetch-Site",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						}
					],
					"count": "3",
					"solution": "<p>Ensure that Sec-Fetch-Site header is included in request headers.</p>",
					"otherinfo": "",
					"reference": "<p>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Sec-Fetch-Site</p>",
					"cweid": "352",
					"wascid": "9",
					"sourceid": "33"
				},
				{
					"pluginid": "90005",
					"alertRef": "90005-4",
					"alert": "Sec-Fetch-User Header is Missing",
					"name": "Sec-Fetch-User Header is Missing",
					"riskcode": "0",
					"confidence": "3",
					"riskdesc": "Informational (High)",
					"desc": "<p>Specifies if a navigation request was initiated by a user.</p>",
					"instances":[ 
						{
							"id": "57",
							"uri": "https://trackdechets.beta.gouv.fr/",
							"method": "GET",
							"param": "Sec-Fetch-User",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "31",
							"uri": "https://trackdechets.beta.gouv.fr/robots.txt",
							"method": "GET",
							"param": "Sec-Fetch-User",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "29",
							"uri": "https://trackdechets.beta.gouv.fr/sitemap.xml",
							"method": "GET",
							"param": "Sec-Fetch-User",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						}
					],
					"count": "3",
					"solution": "<p>Ensure that Sec-Fetch-User header is included in user initiated requests.</p>",
					"otherinfo": "",
					"reference": "<p>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Sec-Fetch-User</p>",
					"cweid": "352",
					"wascid": "9",
					"sourceid": "33"
				},
				{
					"pluginid": "10112",
					"alertRef": "10112",
					"alert": "Session Management Response Identified",
					"name": "Session Management Response Identified",
					"riskcode": "0",
					"confidence": "2",
					"riskdesc": "Informational (Medium)",
					"desc": "<p>The given response has been identified as containing a session management token. The 'Other Info' field contains a set of header tokens that can be used in the Header Based Session Management Method. If the request is in a context which has a Session Management Method set to \"Auto-Detect\" then this rule will change the session management to use the tokens identified.</p>",
					"instances":[ 
						{
							"id": "3",
							"uri": "https://trackdechets.beta.gouv.fr",
							"method": "GET",
							"param": "csrftoken",
							"attack": "",
							"evidence": "ZMokzBUZonNCzhdzTjfNxK1i5HgctT7C",
							"otherinfo": "\ncookie:csrftoken"
						},
						{
							"id": "0",
							"uri": "https://trackdechets.beta.gouv.fr",
							"method": "GET",
							"param": "csrftoken",
							"attack": "",
							"evidence": "ahqxEj1pyUQyIwym7RhwYmgxLWzrmfvk",
							"otherinfo": "\ncookie:csrftoken"
						},
						{
							"id": "32",
							"uri": "https://trackdechets.beta.gouv.fr/",
							"method": "GET",
							"param": "csrftoken",
							"attack": "",
							"evidence": "ZMokzBUZonNCzhdzTjfNxK1i5HgctT7C",
							"otherinfo": "\ncookie:csrftoken"
						},
						{
							"id": "93",
							"uri": "https://trackdechets.beta.gouv.fr/nl-signup/general/",
							"method": "POST",
							"param": "csrftoken",
							"attack": "",
							"evidence": "ZMokzBUZonNCzhdzTjfNxK1i5HgctT7C",
							"otherinfo": "\ncookie:csrftoken"
						},
						{
							"id": "97",
							"uri": "https://trackdechets.beta.gouv.fr/nl-signup/tech/",
							"method": "POST",
							"param": "csrftoken",
							"attack": "",
							"evidence": "ZMokzBUZonNCzhdzTjfNxK1i5HgctT7C",
							"otherinfo": "\ncookie:csrftoken"
						},
						{
							"id": "2",
							"uri": "https://trackdechets.beta.gouv.fr/nl-signup/tech/",
							"method": "GET",
							"param": "csrftoken",
							"attack": "",
							"evidence": "ZMokzBUZonNCzhdzTjfNxK1i5HgctT7C",
							"otherinfo": "\ncookie:csrftoken"
						}
					],
					"count": "6",
					"solution": "<p>This is an informational alert rather than a vulnerability and so there is nothing to fix.</p>",
					"otherinfo": "<p></p><p>cookie:csrftoken</p>",
					"reference": "<p>https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id</p>",
					"cweid": "-1",
					"wascid": "-1",
					"sourceid": "6"
				},
				{
					"pluginid": "10049",
					"alertRef": "10049",
					"alert": "Storable and Cacheable Content",
					"name": "Storable and Cacheable Content",
					"riskcode": "0",
					"confidence": "2",
					"riskdesc": "Informational (Medium)",
					"desc": "<p>The response contents are storable by caching components such as proxy servers, and may be retrieved directly from the cache, rather than from the origin server by the caching servers, in response to similar requests from other users. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where \"shared\" caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.</p>",
					"instances":[ 
						{
							"id": "42",
							"uri": "https://trackdechets.beta.gouv.fr",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "",
							"otherinfo": "In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234."
						},
						{
							"id": "41",
							"uri": "https://trackdechets.beta.gouv.fr/",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "",
							"otherinfo": "In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234."
						},
						{
							"id": "47",
							"uri": "https://trackdechets.beta.gouv.fr/cgu/",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "",
							"otherinfo": "In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234."
						},
						{
							"id": "70",
							"uri": "https://trackdechets.beta.gouv.fr/partenaires/",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "",
							"otherinfo": "In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234."
						},
						{
							"id": "23",
							"uri": "https://trackdechets.beta.gouv.fr/robots.txt",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "",
							"otherinfo": "In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234."
						},
						{
							"id": "20",
							"uri": "https://trackdechets.beta.gouv.fr/sitemap.xml",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "",
							"otherinfo": "In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234."
						},
						{
							"id": "69",
							"uri": "https://trackdechets.beta.gouv.fr/static/css/trackdechets.css",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "max-age=60",
							"otherinfo": ""
						},
						{
							"id": "76",
							"uri": "https://trackdechets.beta.gouv.fr/static/img/apple-touch-icon.png",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "max-age=60",
							"otherinfo": ""
						},
						{
							"id": "80",
							"uri": "https://trackdechets.beta.gouv.fr/static/img/favicon-32x32.png",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "max-age=60",
							"otherinfo": ""
						},
						{
							"id": "78",
							"uri": "https://trackdechets.beta.gouv.fr/static/pdf/politique-de-confidentialite.pdf",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "max-age=60",
							"otherinfo": ""
						},
						{
							"id": "63",
							"uri": "https://trackdechets.beta.gouv.fr/stats/",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "",
							"otherinfo": "In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234."
						}
					],
					"count": "11",
					"solution": "<p>Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:</p><p>Cache-Control: no-cache, no-store, must-revalidate, private</p><p>Pragma: no-cache</p><p>Expires: 0</p><p>This configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.</p>",
					"otherinfo": "<p>In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234.</p>",
					"reference": "<p>https://datatracker.ietf.org/doc/html/rfc7234</p><p>https://datatracker.ietf.org/doc/html/rfc7231</p><p>https://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html</p>",
					"cweid": "524",
					"wascid": "13",
					"sourceid": "1"
				}
			]
		}
	],
	"sequences":[
	]

}
